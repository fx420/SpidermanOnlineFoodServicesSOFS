/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.spidermanonlinefoodservicessofs;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import com.mycompany.spidermanonlinefoodservicessofs.CustomerMainMenu;
import com.mycompany.spidermanonlinefoodservicessofs.cart;
import com.mycompany.spidermanonlinefoodservicessofs.cartitem;
import com.mycompany.spidermanonlinefoodservicessofs.Item;
import com.mycompany.spidermanonlinefoodservicessofs.order;
import com.mycompany.spidermanonlinefoodservicessofs.orderline;
import com.mycompany.spidermanonlinefoodservicessofs.ItemService;
import com.mycompany.spidermanonlinefoodservicessofs.orderservice;

/**
 *
 * @author Alan Wong
 */
public class CustomerOrder extends javax.swing.JFrame {

    private final ItemService ItemService;
    private final orderservice orderservice;
    private bill t;
    private String FDName;
    private String FDQuantity;
    private double FDTotalPrice = 0;
    private double sum = 0;
    
    public void setFDName(String FDName) {
        this.FDName = FDName;
    }

    public void setFDQuantity(String FDQuantity) {
        this.FDQuantity = FDQuantity;
    }

    public String getFDName() {
        return FDName;
    }

    public String getFDQuantity() {
        return FDQuantity;
    }
    
    /**
     * Creates new form CustomerOrder
     */
    public CustomerOrder() {
        this.initComponents();
        this.ItemService = new ItemService();
        this.orderservice = new orderservice();
        this.performFileRelatedTask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FDList = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        FDID = new javax.swing.JLabel();
        FDN = new javax.swing.JLabel();
        FDCategory = new javax.swing.JLabel();
        FDPrice = new javax.swing.JLabel();
        FDIDLab = new javax.swing.JLabel();
        FDQuantityLab = new javax.swing.JLabel();
        FDIDTxt = new javax.swing.JTextField();
        FDQuantityTxt = new javax.swing.JTextField();
        AddtoCartBut = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PayList = new javax.swing.JTextArea();
        OFDName = new javax.swing.JLabel();
        OFDQuantity = new javax.swing.JLabel();
        OFDPrice = new javax.swing.JLabel();
        TotalPriceTxt = new javax.swing.JTextField();
        CancelBut = new javax.swing.JButton();
        OrderBut = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        PaymentList = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        PrintBut = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TotalFDPriceTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FDList.setColumns(20);
        FDList.setRows(5);
        jScrollPane1.setViewportView(FDList);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Order");

        FDID.setText("Food ID");

        FDN.setText("Food Name");

        FDCategory.setText("Food Category");

        FDPrice.setText("Food Price");

        FDIDLab.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        FDIDLab.setForeground(new java.awt.Color(0, 0, 0));
        FDIDLab.setText("Which Food ID want to order:");

        FDQuantityLab.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        FDQuantityLab.setForeground(new java.awt.Color(0, 0, 0));
        FDQuantityLab.setText("Enter Food Quantity:");

        AddtoCartBut.setBackground(new java.awt.Color(255, 255, 255));
        AddtoCartBut.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        AddtoCartBut.setForeground(new java.awt.Color(0, 0, 0));
        AddtoCartBut.setText("Add to cart");
        AddtoCartBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddtoCartButActionPerformed(evt);
            }
        });

        PayList.setColumns(20);
        PayList.setRows(5);
        jScrollPane2.setViewportView(PayList);

        OFDName.setText("Food Name");

        OFDQuantity.setText("Food Quantity");

        OFDPrice.setText("Food Price");

        CancelBut.setBackground(new java.awt.Color(255, 255, 255));
        CancelBut.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 12)); // NOI18N
        CancelBut.setForeground(new java.awt.Color(0, 0, 0));
        CancelBut.setText("Cancel");
        CancelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButActionPerformed(evt);
            }
        });

        OrderBut.setBackground(new java.awt.Color(255, 255, 255));
        OrderBut.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        OrderBut.setForeground(new java.awt.Color(0, 0, 0));
        OrderBut.setText("Order");
        OrderBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderButActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(255, 255, 255));
        Back.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        Back.setForeground(new java.awt.Color(0, 0, 0));
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        PaymentList.setColumns(20);
        PaymentList.setRows(5);
        jScrollPane3.setViewportView(PaymentList);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 36)); // NOI18N
        jLabel2.setText("Payment");

        PrintBut.setBackground(new java.awt.Color(255, 255, 255));
        PrintBut.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        PrintBut.setForeground(new java.awt.Color(0, 0, 0));
        PrintBut.setText("Print Recipt");
        PrintBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintButActionPerformed(evt);
            }
        });

        jLabel3.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(FDIDLab, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FDQuantityLab, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(FDIDTxt)
                                .addComponent(FDQuantityTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(260, 260, 260)
                            .addComponent(AddtoCartBut)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(FDID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FDN)
                                .addGap(34, 34, 34)
                                .addComponent(FDCategory)
                                .addGap(31, 31, 31)
                                .addComponent(FDPrice)
                                .addGap(9, 9, 9))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OFDName)
                        .addGap(18, 18, 18)
                        .addComponent(OFDQuantity)
                        .addGap(18, 18, 18)
                        .addComponent(OFDPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(OrderBut, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TotalPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(CancelBut))))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Back)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(PrintBut)
                                    .addGap(66, 66, 66)))
                            .addComponent(TotalFDPriceTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(82, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(OFDName)
                                    .addComponent(OFDQuantity)
                                    .addComponent(OFDPrice)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FDPrice)
                                    .addComponent(FDCategory)
                                    .addComponent(FDN)
                                    .addComponent(FDID)
                                    .addComponent(jLabel3)))))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FDIDLab)
                            .addComponent(FDIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CancelBut))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FDQuantityLab)
                            .addComponent(FDQuantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(AddtoCartBut))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OrderBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TotalFDPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PrintBut)
                        .addGap(27, 27, 27)
                        .addComponent(Back)
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void performFileRelatedTask() {
        StringBuilder stringBuilder = new StringBuilder();
        int num = 1;
        for (Item item : ItemService.getAll()) {
            stringBuilder.append(num)
                    .append("\t")
                    .append(item.getFDID())
                    .append("\t")
                    .append(item.getFDName())
                    .append("\t")
                    .append(item.getFDCategory())
                    .append("\t")
                    .append(item.getFDPrice())
                    .append("\n");
            num++;
        }
        FDList.setText(stringBuilder.toString());
    }
    
    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CustomerMainMenu cm = new CustomerMainMenu();
        cm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BackActionPerformed

    private void AddtoCartButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddtoCartButActionPerformed
        // TODO add your handling code here:
        String newItemId = FDIDTxt.getText();
        String newItemQuantityAsString = FDQuantityTxt.getText();

        if (newItemId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter food id to add to cart");
            return;
        }

        if (newItemQuantityAsString.isEmpty()
                || !newItemQuantityAsString.chars().allMatch(Character::isDigit)) {
            JOptionPane.showMessageDialog(this, "Please enter valid food quantity to add to cart");
            return;
        }

        // new item quantity
        int newItemQuantity = Integer.parseInt(newItemQuantityAsString);

        Item newItem = ItemService.getItemByIndex(Integer.parseInt(newItemId));

        if (newItem == null) {
            JOptionPane.showMessageDialog(this, "Sorry , Please enter a valid Item ID");
            return;
        } else {

            cartitem cartitem = new cartitem(newItem, newItemQuantity, newItem.getFDPrice() * newItemQuantity);
            orderservice.addToCart(cartitem);

            PayList.setText(getReciptStringByCart());
            TotalPriceTxt.setText(String.valueOf(orderservice.getCart().getTotalPrice()));

            JOptionPane.showMessageDialog(this, "Item has been added to cart");

            FDIDTxt.setText("");
            FDQuantityTxt.setText("");
        }
    }//GEN-LAST:event_AddtoCartButActionPerformed

    public String getReciptStringByCart() {
        
        List<cartitem> cartitems = orderservice.getCart().getCItems();

        StringBuilder stringBuilder = new StringBuilder();

        cartitems.forEach((Item) -> {
            stringBuilder.append(Item.getItem().getFDName())
                    .append("\t")
                    .append(Item.getFDQuantity())
                    .append("\t")
                    .append(Item.getFDPrice())
                    .append("\n");
        });

        return stringBuilder.toString();
    }
    
    private void CancelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButActionPerformed
        // TODO add your handling code here:
        orderservice.clearCart();
        this.PayList.setText("");
        this.TotalPriceTxt.setText("");
    }//GEN-LAST:event_CancelButActionPerformed

    private void OrderButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderButActionPerformed
        // TODO add your handling code here:
        cart cart = orderservice.getCart();
        
        if (cart.getCItems().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Opps, You have not added any "
                    + "item to cart. Please add item to the cart");
            return;
        }

        int lastOrderNumber = 0;

        // Scan the order file and get the last order number
        try (Scanner scanner = new Scanner(new FileInputStream("storage/orderLine.txt"))) {
            while (scanner.hasNextLine()) {
                String orderLine = scanner.nextLine();
                if (orderLine.length() > 0) {
                    String orderParts[] = orderLine.split(",");

                    orderline orderLineObj = new orderline(
                            Integer.parseInt(orderParts[0]),
                            orderParts[1],
                            Integer.parseInt(orderParts[2]),
                            Double.parseDouble(orderParts[3]));

                    lastOrderNumber = orderLineObj.getOrderID();
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

        // new order number
        int orderNumber = ++lastOrderNumber;

        // create order line line with unique order number - incremental
        try (PrintWriter pw = new PrintWriter(new FileOutputStream("storage/orderLine.txt", true))) {
            for (int i = 0; i < cart.getCItems().size(); i++) {
                cartitem cartitem = cart.getCItems().get(i);

                orderline orderline = new orderline(
                        orderNumber,
                        cartitem.getItem().getFDName(),
                        cartitem.getFDQuantity(),
                        cartitem.getFDPrice());

                pw.println(orderline.getOrderID() + "," + orderline.getFDName() + "," + orderline.getFDQuantity() + "," + orderline.getFDPrice());
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

        // create order with the same order number as order line
        try (PrintWriter pw = new PrintWriter(new FileOutputStream("storage/order.txt", true))) {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date date = new Date();

            order order = new order(orderNumber, cart.getTotalPrice(), sdf.format(date));

            pw.println((order.getOrderID() + ",") + order.getPrice() + "," + order.getDate());
            PaymentList.setText(getReciptStringByCart());
            TotalFDPriceTxt.setText(String.valueOf(orderservice.getCart().getTotalPrice()));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Clear the cart
        this.CancelButActionPerformed(evt);

        // Reinitilize the cart area
        this.performFileRelatedTask();
        JOptionPane.showMessageDialog(this, "Order has been created successfully !");
    }//GEN-LAST:event_OrderButActionPerformed

    private void PrintButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButActionPerformed
        // TODO add your handling code here:
        try {

            boolean complete = FDList.print();
            if (complete) {

                JOptionPane.showMessageDialog(null, "Done printing");
            } else {
                JOptionPane.showMessageDialog(null, "Printing cancel", "Printer", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_PrintButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddtoCartBut;
    private javax.swing.JButton Back;
    private javax.swing.JButton CancelBut;
    private javax.swing.JLabel FDCategory;
    private javax.swing.JLabel FDID;
    private javax.swing.JLabel FDIDLab;
    private javax.swing.JTextField FDIDTxt;
    private javax.swing.JTextArea FDList;
    private javax.swing.JLabel FDN;
    private javax.swing.JLabel FDPrice;
    private javax.swing.JLabel FDQuantityLab;
    private javax.swing.JTextField FDQuantityTxt;
    private javax.swing.JLabel OFDName;
    private javax.swing.JLabel OFDPrice;
    private javax.swing.JLabel OFDQuantity;
    private javax.swing.JButton OrderBut;
    private javax.swing.JTextArea PayList;
    private javax.swing.JTextArea PaymentList;
    private javax.swing.JButton PrintBut;
    private javax.swing.JTextField TotalFDPriceTxt;
    private javax.swing.JTextField TotalPriceTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
